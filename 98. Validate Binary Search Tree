/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */ 
class Solution {
public:
bool helper(TreeNode* root,long mini,long maxi){
    if(root==NULL)return true;
    return (root->val<maxi && root->val>mini && helper(root->left,mini,root->val) && helper(root->right,root->val,maxi));

}
    bool isValidBST(TreeNode* root) {
        return helper(root,LONG_MIN,LONG_MAX);
        // if(root==NULL)return true;
        // if(root->left){
        //     if(root->left->val>=root->val)return false;
        // }
        // if(root->right){
        //     if(root->right->val<=root->val)return false;
        // }
        // return(isValidBST(root->right) && isValidBST(root->left) );
        
    }
};
