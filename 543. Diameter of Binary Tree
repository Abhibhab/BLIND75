/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int height(TreeNode* root,int &ans){
        if(root==NULL)return 0;
        int lh=height(root->left,ans);
        int rh=height(root->right,ans);
        ans=max(ans,lh+rh);
        return max(lh,rh)+1;
    }
    // int diameter(TreeNode*root){
    //     if(root==NULL)return 0;
    //     int lh=height(root->left);
    //     int rh=height(root->right);
    //     int ld=diameter(root->left);
    //     int rd=diameter(root->right);
    //     int ans=max({ld,rd,lh+rh});
    //     return ans;
    // }
    int diameterOfBinaryTree(TreeNode* root) {
        int ans=0;
        int helo= height(root,ans);
        return ans;
        
    }
};
