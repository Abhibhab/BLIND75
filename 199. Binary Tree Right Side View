/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        if(root==NULL)return {};
        // vector<int>ans;
        // helper(root,0,ans);
        // return ans;

        queue<TreeNode*>q;
        q.push(root);
        vector<int>ans2;
        while(q.size()){
            int n=q.size();
            ans2.push_back(q.front()->val);
            for(int i=0;i<n;i++){
                auto it=q.front();
                q.pop();
                if(it->right)q.push(it->right);
                if(it->left)q.push(it->left);

            }
        }
        return ans2;

        
    }
    
   void helper(TreeNode* root,int level,vector<int>&ans){
        if(root==NULL)return ;
        if(level==ans.size())ans.push_back(root->val);
       helper(root->right,level+1,ans);
       helper(root->left,level+1,ans);
        
    }
};
