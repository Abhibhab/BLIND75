class Solution {
public:
    void dfs(int r,int c,vector<vector<int>>&vis,vector<vector<char>>&grid){
        vis[r][c]=1;
        int dx[4]={0,0,-1,1};
        int dy[4]={-1,1,0,0};
        for(int i=0;i<4;i++){
            int nx=r+dx[i];
            int ny=c+dy[i];
            if(nx>=0 and ny>=0 and nx<grid.size() and ny<grid[0].size() and vis[nx][ny]==0 and grid[nx][ny]=='1'){
                dfs(nx,ny,vis,grid);
            }
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>>vis(n,vector<int>(m,0));
        int ans=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(!vis[i][j] && grid[i][j]=='1'){
                    ans++;
                    dfs(i,j,vis,grid);
                }
            }
        }
        return ans;
        
    }
};
